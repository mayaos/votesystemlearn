<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace value ： 实现的DAO接口的路径 -->
<mapper namespace="com.eastcompeace.usermng.info.CitizenDao">

	<select id="queryListBy" resultType="citizen" parameterType="Map">
		select 
			t.citizen_id citizenID,
			t.user_name userName,
			t.user_password userPassword,
			t.user_nickname userNickname,
			d.code_name userLevel,
			CASE t.user_status
			WHEN 0 THEN '正常'
			WHEN 1 THEN	'冻结'
			END userStatus,
			date_format(t.user_reg_time,'%Y-%m-%d %H:%i:%s') userRegTime,
			date_format(t.user_last_login_time,'%Y-%m-%d %H:%i:%s') userLastLoginTime,
			t.user_login_times userLoginTimes,
			t.email email,
			t.postcode postcode
		from citizen_user t
		left join common_code_dict d 
			on d.code_value = t.user_level 
			and d.code_type='userLevel' 
			and d.code_valid ='VALID'
		<where> 1=1
			<if test="userName != null and userName !=''">
				and t.user_name like concat('%', #{userName},'%')
			</if>
			<if test="userLevel != null and userLevel !=''">
				and t.user_level = #{userLevel}
			</if>
			<if test="userStatus != null and userStatus !=''">
				and t.user_status = #{userStatus}
			</if>
		    <if test="startTime !=null and startTime !=''">
			    and t.user_reg_time between #{startTime} and #{endTime}
		    </if>
		</where> 
	</select> 
	
	<select id="query" resultType="citizen" parameterType="String">
		select 
			t.citizen_id citizenID,
			t.user_name userName,
			t.user_password userPassword,
			t.user_nickname userNickname,
			d.code_name userLevel,
			CASE t.user_status
			WHEN 0 THEN '正常'
			WHEN 1 THEN	'冻结'
			END userStatus,
			date_format(t.user_reg_time,'%Y-%m-%d %H:%i:%s') userRegTime,
			date_format(t.user_last_login_time,'%Y-%m-%d %H:%i:%s') userLastLoginTime,
			t.user_login_times userLoginTimes,
			t.email email,
			t.postcode postcode
		from citizen_user t
		left join common_code_dict d 
			on d.code_value = t.user_level 
			and d.code_type='userLevel' 
			and d.code_valid ='VALID'
		where t.citizen_id = #{citizenID}
	</select> 
	
	<select id="queryIdentity" resultType="citizen" parameterType="String">
		select 
			t.citizen_id citizenID,
			t.citizen_name citizenName,
			t.id_card idCard,
			t.rc_card rcCard,
			t.bank_card bankCard,
			d.code_name rcCardType,
			CASE t.sex
			WHEN 'MALE' THEN '男'
			WHEN 'FEMALE' THEN '女'
			END sex,
			date_format(t.birthday,'%Y-%m-%d') birthday,
			d2.code_name nation,
			t.address address,
			date_format(t.issue_date,'%Y-%m-%d %H:%i:%s') issueDate,
			t.issue_office issueOffice,
			date_format(t.valid_thru,'%m/%Y') validThru,
			t.rc_head rcHead
		from citizen_identity t
		left join common_code_dict d
			on d.code_value = t.rc_card_type 
			and d.code_type='rcCardType' 
			and d.code_valid ='VALID'			
		left join common_code_dict d2
			on d2.code_value = t.nation 
			and d2.code_type='nation' 
			and d2.code_valid ='VALID'
		where t.citizen_id = #{citizenID}
	</select> 
	
	<select id="queryCertList" resultType="citizenCert" parameterType="String">
		SELECT 
			t.cert_type certType,
			t.cert_num certNum
		FROM citizen_other_cert t
		WHERE t.citizen_id = #{citizenID}
		ORDER BY t.cert_type ASC
	</select>
	
	<select id="queryMessageListBy" resultType="citizenMsg">
		select 
			t.message_id messageID,
			t.citizen_id citizenID,
			t.message_title messageTitle,
			t.message_content messageContent,
			CASE t.message_status 
			WHEN 0 THEN '未读'
			WHEN 1 THEN '已读' 
			END messageStatus,
			date_format(t.create_time,'%Y-%m-%d %H:%i:%s') createTime
		from citizen_message t
		where t.citizen_id = #{citizenID}
		ORDER BY t.message_id DESC
	</select> 
	
	<select id="queryCouponListBy" resultType="citizenCoupon">
		SELECT 
			t3.benefit_id benefitID,
			t2.coupon_code couponCode,
			t3.benefit_name benefitName,
			t3.benefit_quota quota,
			t3.use_explain useExplain,
			date_format(t3.valid_time,'%Y-%m-%d') validTime,
			t3.description description,
			t3.benefit_image imgUrl,
			t4.merchant_name merchant,
			t4.telephone phoneNum,
			t4.address address,
			d.code_name status
		FROM citizen_coupon t
		LEFT JOIN merchant_coupon t2 ON t2.coupon_id=t.coupon_id
		LEFT JOIN merchant_benefit t3 ON t3.benefit_id=t2.benefit_id
		LEFT JOIN merchant_info t4 ON t4.merchant_id=t3.merchant_id
		LEFT JOIN common_code_dict d
			on d.code_value = t2.status 
			and d.code_type='couponStatus' 
			and d.code_valid ='VALID'
		WHERE t.citizen_id = #{citizenID}
		ORDER BY t3.benefit_id DESC
	</select>
	
	<select id="queryVipCardListBy" resultType="vipCard" parameterType="String">
		select 
			t.vipcard_id vipcardID,
			t.citizen_id citizenID,
			t.merchant_id merchantID,
			t.vipcard_code vipcardCode,
			date_format(t.open_time,'%Y.%m.%d') openTime,
			date_format(t.open_time,'%Y.%m.%d') endTime,
			t2.merchant_name merchantName,
			t2.merchant_logo merchantLogo,
			t2.contacts contacts,
			t2.telephone telephone,
			t2.vipcard_rule vipcardRule
		from citizen_vipcard t
		left join merchant_info t2 on t2.merchant_id = t.merchant_id
		where t.citizen_id = #{citizenID}
		ORDER BY t.vipcard_id  DESC
	</select>
	
	<update id="update" parameterType="citizen">
		update citizen_user t
		<trim prefix="SET" suffixOverrides=","> 
			<if test="userStatus != null and userStatus != ''">
				t.user_status = #{userStatus},
			</if>
		</trim>
		where t.citizen_id = #{citizenID}
	</update>
	
	<delete id="deleteMoreBy" parameterType="List">
		delete from citizen_user where citizen_id in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
	    </foreach>
	</delete>
	
</mapper>