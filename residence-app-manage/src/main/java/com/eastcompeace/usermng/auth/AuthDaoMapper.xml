<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace value ： 实现的DAO接口的路径 -->
<mapper namespace="com.eastcompeace.usermng.auth.AuthDao">

	<select id="query" resultType="citizenAuth" parameterType="String">
		select 
			t.auth_id authID,
			t.citizen_id citizenID,
			CASE t.auth_type 
			WHEN 1 THEN '身份证'
			WHEN 2 THEN '居住证'
			END authType,
			d.code_name authStatus,
			CASE t.auth_result 
			WHEN 'TRUE' THEN '成功'
			WHEN 'FALSE' THEN '失败'
			END authResult,
			t.auth_result_message authResultMessage,
			date_format(t.auth_time,'%Y-%m-%d %H:%i:%s') authTime,
		from citizen_auth t
		left join common_code_dict d 
			on d.code_value = t.auth_status 
			and d.code_type='authStatus' 
			and d.code_valid ='VALID'
		where t.auth_id = #{id}
	</select> 
	
	<select id="queryListBy" resultType="citizenAuth" parameterType="Map">
		select 
			t.auth_id authID,
			t.citizen_id citizenID,
			CASE t.auth_type 
			WHEN 1 THEN '身份证'
			WHEN 2 THEN '居住证'
			END authType,
			d.code_name authStatus,
			CASE t.auth_result 
			WHEN 'TRUE' THEN '成功'
			WHEN 'FALSE' THEN '失败'
			END authResult,
			t.auth_result_message authResultMessage,
			date_format(t.auth_time,'%Y-%m-%d %H:%i:%s') authTime,
			t2.user_name userName,
			t2.citizen_name citizenName,
			t2.id_card idCard,
			t2.rc_card rcCard
		from citizen_auth t
		Left join citizen_info t2 on t2.citizen_id = t.citizen_id
		left join common_code_dict d 
			on d.code_value = t.auth_status 
			and d.code_type = 'authStatus' 
			and d.code_valid = 'VALID'
		<where>
			<if test="userName !=null and userName !=''">
				t2.user_name like concat('%', #{userName},'%')
			</if>
		    <if test="authType !=null and authType !=''">
			    and t.auth_type =#{authType}
		    </if>
		    <if test="authStatus !=null and authStatus !=''">
			    and t.auth_status= #{authStatus}
		    </if>
		     <if test="startTime !=null and startTime !=''">
			    and t.auth_time between #{startTime} and #{endTime}
		    </if>
		</where>
		ORDER BY t.auth_id DESC
	</select> 
	
	<select id="queryExcelListBy" resultType="citizenAuthExcel" parameterType="Map">
		select 
			t2.user_name userName,
			t2.citizen_name citizenName,
			t2.id_card idCard,
			t2.rc_card rcCard,
			CASE t.auth_type 
			WHEN 1 THEN '身份证'
			WHEN 2 THEN '居住证'
			END authType,
			date_format(t.auth_time,'%Y-%m-%d %H:%i:%s') authTime,
			d.code_name authStatus,
			CASE t.auth_result 
			WHEN 'TRUE' THEN '成功'
			WHEN 'FALSE' THEN '失败'
			END authResult,
			t.auth_result_message authResultMessage
		from citizen_auth t
		Left join citizen_info t2 on t2.citizen_id = t.citizen_id
		left join common_code_dict d 
			on d.code_value = t.auth_status 
			and d.code_type = 'authStatus' 
			and d.code_valid = 'VALID'
		<where>
			<if test="userName !=null and userName !=''">
				t2.user_name like concat('%', #{userName},'%')
			</if>
		    <if test="authType !=null and authType !=''">
			    and t.auth_type=#{authType}
		    </if>
		    <if test="authStatus !=null and authStatus !=''">
			    and t.auth_status= #{authStatus}
		    </if>
		     <if test="startTime !=null and startTime !=''">
			    and t.auth_time between #{startTime} and #{endTime}
		    </if>
		</where>
		ORDER BY t.auth_id DESC
	</select> 
	
	<select id="queryAuthExcelListBy" resultType="authExcel" parameterType="Map">
		select 
			t2.user_name userName,
			t2.citizen_name citizenName,
			t2.id_card idCard,
			date_format(t.auth_time,'%Y-%m-%d %H:%i:%s') authTime
		from citizen_auth t
		Left join citizen_info t2 on t2.citizen_id = t.citizen_id
		<where>
			<if test="userName !=null and userName !=''">
				t2.user_name like concat('%', #{userName},'%')
			</if>
		    <if test="authType !=null and authType !=''">
			    and t.auth_type=#{authType}
		    </if>
		    <if test="authStatus !=null and authStatus !=''">
			    and t.auth_status= #{authStatus}
		    </if>
		     <if test="startTime !=null and startTime !=''">
			    and t.auth_time between #{startTime} and #{endTime}
		    </if>
		</where>
		ORDER BY t.auth_id DESC
	</select> 
	
	<select id="verifyAndUpdateAuth" parameterType="Map" statementType="CALLABLE">  
		{call P_Auth_Imprty(#{rtCode,jdbcType=INTEGER,mode=OUT})}  
	</select>
	
	<select id="getImportNullList" resultType="authExcel">
		SELECT t.user_name userName,
			t.citizen_name citizenName,
			t.id_card idCard,
			DATE_FORMAT(t.auth_time,'%Y-%m-%d %H:%i:%s') authTime
		FROM temp_auth_import t
			WHERE t.user_name IS NULL
			OR t.citizen_name IS NULL 
			OR t.id_card IS NULL 
			OR t.auth_result IS NULL
		limit 0, 10
	</select>
	
	<select id="getImportNonList" resultType="authExcel">
		SELECT t.user_name userName,
			t.citizen_name citizenName,
			t.id_card idCard,
			DATE_FORMAT(t.auth_time,'%Y-%m-%d %H:%i:%s') authTime
		FROM error_auth_import_non t
		LIMIT 0, 10
	</select>
	
	<select id="RcAuth" parameterType="Map" statementType="CALLABLE">  
		{call P_RC_Auth(#{startTime,jdbcType=VARCHAR,mode=IN}, #{endTime,jdbcType=VARCHAR,mode=IN}, #{rtCode,jdbcType=INTEGER,mode=OUT},#{rtMessage,jdbcType=VARCHAR,mode=OUT})}  
	</select>
	
	<insert id="importMore" useGeneratedKeys="true" parameterType="List" >
    	insert into temp_auth_import (
    		user_name,
    		citizen_name,
			id_card,
			auth_time,
			auth_result,
			auth_result_message
    	) values 
	    <foreach collection="list" item="item" index="index" separator="," >
    	(	#{item.userName},
        	#{item.citizenName},
        	#{item.idCard},
			#{item.authTime},
			#{item.authResult},
			#{item.authResultMessage}
        )
	    </foreach>  
	</insert>
	
	<update id="update" parameterType="citizenAuth">
		update citizen_auth t
		<trim prefix="SET" suffixOverrides=","> 
			<if test="authStatus != null and authStatus != ''">
				t.auth_status = #{authStatus},
			</if>
			<if test="authResult != null and authResult != ''">
				t.auth_result = #{authResult},
			</if>
			<if test="authResultMessage != null and authResultMessage != ''">
				t.auth_result_message = #{authResultMessage},
			</if>
		</trim>
		where t.auth_id = #{authID}
	</update>
	
	<update id="updateMore" parameterType="Map">
		update citizen_auth t
		left join citizen_info t2 on t2.citizen_id = t.citizen_id
		<trim prefix="SET" suffixOverrides=","> 
			<if test="newStatus != null and newStatus != ''">
				t.auth_status = #{newStatus},
			</if>
			<if test="authResult != null and authResult != ''">
				t.auth_result = #{authResult},
			</if>
			<if test="authResultMessage != null and authResultMessage != ''">
				t.auth_result_message = #{authResultMessage},
			</if>
		</trim>
		<trim prefix="WHERE" prefixOverrides="and|or"> 
			<if test="userName != null and userName !=''">
				and t2.user_name = #{userName}
			</if>
			<if test="authType != null and authType !=''">
				and t.auth_type = #{authType}
			</if>
			<if test="authStatus != null and authStatus !=''">
				and t.auth_status = #{authStatus}
			</if>
		     <if test="startTime !=null and startTime !=''">
			    and t.auth_time between #{startTime} and #{endTime}
		    </if>
		</trim>
	</update>
	
	<delete id="deleteMoreBy" parameterType="List">
		delete from citizen_auth where auth_id in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
	    </foreach>
	</delete>
	
	<delete id="clearAuthTemp">
		delete from temp_auth_import
	</delete>
	
</mapper>