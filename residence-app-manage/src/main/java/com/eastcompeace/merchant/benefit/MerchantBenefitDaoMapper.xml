<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="com.eastcompeace.merchant.benefit.MerchantBenefitDao">

	<resultMap id="BenefitMap" type="MerchantBenefit">
	    <id column="benefit_id" property="benefitId" />
	    <result column="merchant_id" property="merchantId"/>
	    <result column="benefit_name" property="benefitName"/>
	    <result column="benefit_quota" property="benefitQuota"/>
	    <result column="benefit_count" property="benefitCount"/>
	    <result column="use_explain" property="useExplain"/>
	    <result column="description" property="description"/>
	    <result column="limited_count" property="limitedCount"/>
	    <result column="create_time" property="createTime"/>
	    <result column="change_time" property="changeTime"/>
	    <result column="valid_time" property="validTime"/>
	    <result column="benefit_image" property="benefitImage"/>
	</resultMap>

	<select id="queryListBy" resultMap="BenefitMap">
		select 
			m.benefit_id benefitId,
			m.merchant_id merchantId,
			m.benefit_name benefitName,
			m.benefit_quota benefitQuota,
			m.benefit_count benefitCount,
			m.use_explain useExplain,
			m.description description,
			m.benefit_image benefitImage,
			m.limited_count limitedCount,
			CASE m.recommend_flag
			WHEN 1 THEN '是'
			WHEN 0 THEN '否'
			END recommendFlag,
			date_format(m.create_time,'%Y-%m-%d %H:%i:%s') createTime,
			date_format(m.change_time,'%Y-%m-%d %H:%i:%s') changeTime,
			date_format(m.valid_time,'%Y-%m-%d %H:%i:%s') validTime,
			t2.merchant_name merchantName
		from merchant_benefit m
		Left join merchant_info t2 on t2.merchant_id = m.merchant_id
		where 1=1
			<if test="merchantId !=null and merchantId !=''">
			   and m.merchant_id = #{merchantId}
		    </if>
		    <if test="benefitName !=null and benefitName !=''">
			    and m.benefit_name like CONCAT('%',#{benefitName}, '%')
		    </if>
		    <if test="benefitQuota !=null and benefitQuota != ''">
			    and m.benefit_quota=#{benefitQuota}
		    </if>
		     <if test="benefitCount != null and benefitCount != ''">
			    and m.benefit_count = #{benefitCount}
		    </if>
		    <if test="createTime !=null and createTime !=''">
			    and m.create_time between #{createTime} and #{validTime}
		    </if>
		    <if test="merchantName !=null and merchantName !=''">
			    and t2.merchant_name like CONCAT('%', #{merchantName}, '%')
		    </if>
		ORDER BY m.benefit_id DESC
	</select>
	
	<select id="query" resultMap="BenefitMap">
		select 
			m.benefit_id benefitId,
			m.merchant_id merchantId,
			m.benefit_name benefitName,
			m.benefit_quota benefitQuota,
			m.benefit_count benefitCount,
			m.use_explain useExplain,
			m.description description,
			m.benefit_image benefitImage,
			m.limited_count limitedCount,
			date_format(m.create_time,'%Y-%m-%d %H:%i:%s') createTime,
			date_format(m.change_time,'%Y-%m-%d %H:%i:%s') changeTime,
			date_format(m.valid_time,'%Y-%m-%d %H:%i:%s') validTime
		from merchant_benefit m
		where m.benefit_id = #{id}
	</select>
	
	<select id="queryBy" resultType="MerchantBenefit">
		select 
			t.benefit_id benefitId
		from merchant_benefit t
		where 1=1
			<if test="benefitId!=null and benefitId!=''">
			   t.benefit_id=#{benefitId}
		    </if>
		    <if test="merchantId !=null and merchantId !=''">
			    and t.merchant_id=#{merchantId}
		    </if>
		    <if test="benefitName !=null and benefitName !=''">
			    and t.benefit_name=#{benefitName}
		    </if>
		    <if test="benefitName !=null and benefitName !=''">
			    and t.benefit_name=#{benefitName}
		    </if>
		    <if test="createTime !=null and createTime !=''">
			    and t.create_time=#{createTime}
		    </if>
		    <if test="validTime !=null and validTime !=''">
			    and t.valid_time=#{validTime}
		    </if>
		    limit 1
	</select>
	

	<update id="update" parameterType="MerchantBenefit">
		update merchant_benefit
	    set
	    	<if test="merchantId !=null and merchantId !=''">
			    merchant_id = #{merchantId},
		    </if>
		    <if test="benefitName !=null and benefitName !=''">
			    benefit_name = #{benefitName},
		    </if>
		    <if test="benefitName !=null and benefitName !=''">
			    benefit_quota = #{benefitQuota},
		    </if>
		    <if test="benefitCount !=null and benefitCount !=''">
			    benefit_count = #{benefitCount},
		    </if>
		    <if test="useExplain !=null and useExplain !=''">
			    use_explain = #{useExplain},
		    </if>
		    <if test="description !=null and description !=''">
			    description = #{description},
		    </if>
		    <if test="limitedCount !=null and limitedCount !=''">
			    limited_count = #{limitedCount},
		    </if>
		    <if test="validTime !=null and validTime !=''">
	      		valid_time = #{validTime},
		    </if>
		    <if test="benefitImage !=null and benefitImage !=''">
	      		benefit_image = #{benefitImage},
		    </if>
		change_time = NOW()
	    where benefit_id = #{benefitId}
	</update>
	
	<update id="setRecommendMerchant" parameterType="list">
		UPDATE merchant_benefit m
		SET m.recommend_flag = 1,
		m.change_time = NOW()
		WHERE m.benefit_id IN
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>
	
	<update id="cancelRecommendMerchant" parameterType="list">
		UPDATE merchant_benefit m
		SET m.recommend_flag = 0,
		m.change_time = NOW()
		WHERE m.benefit_id IN
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>
	
	<delete id="deleteByID">
		delete from merchant_benefit where benefit_id =#{id}
	</delete>
	
	<delete id="deleteMoreBy" parameterType="list">
		delete from merchant_benefit where benefit_id in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<delete id="deleteBenefitBy" parameterType="list">
		delete from merchant_benefit where benefit_id in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
  
	<insert id="insert" useGeneratedKeys="true" parameterType="MerchantBenefit">
	    insert into merchant_benefit (
	    	merchant_id, 
	    	benefit_name, 
	      	benefit_quota, 
	      	benefit_count, 
	      	use_explain, 
	      	description, 
	      	limited_count, 
	      	create_time, 
	      	valid_time, 
	      	benefit_image
		) values (
			#{merchantId}, 
			#{benefitName}, 
	      	#{benefitQuota}, 
	      	#{benefitCount}, 
	      	#{useExplain}, 
	      	#{description}, 
	      	#{limitedCount}, 
	      	#{createTime}, 
	      	#{validTime}, 
	      	#{benefitImage}
		)
	</insert>
  
</mapper>