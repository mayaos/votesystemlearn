<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace value ： 实现的DAO接口的路径 -->
<mapper namespace="com.eastcompeace.system.user.UserDao">

	<!-- resultMap:定义结果集中表字段与实体类属性的映射关系 -->
	<resultMap type="User" id="userMap">
		<!-- common_user表与实体类映射字段 -->
		<result column="user_id" property="userId" />
		<result column="user_code" property="userCode" />
		<result column="user_name" property="userName" />
		<result column="user_sex" property="userSex" />
		<result column="user_password" property="userPassword" />
		<result column="user_idcard" property="userIdcard" />
		<result column="user_deptcode" property="userDeptcode" />
		<result column="pwdvaild_time" property="pwdvaildTime" />
		<result column="is_frozen" property="isFrozen" />
		<result column="is_sms_verify" property="isSmsVerify" />
		<result column="user_birthdate" property="userBirthdate" />
		<result column="user_mobile" property="userMobile" />
		<result column="user_email" property="userEmail" />
		<result column="create_time" property="createTime" />
		<result column="lastlogin_time" property="lastloginTime" />
		<result column="lastlogin_ip" property="lastloginIp" />
		<result column="pwd_initial" property="pwdinitial" />
		<result column="pwd_modify_date" property="pwdmodifydate" />
	</resultMap>
	
	<resultMap type="AccountSmsCode" id="AccountSmsCodeMap">
		<result column="pk_id" property="id" />
		<result column="phone_number" property="phoneNumber" />
		<result column="sms_code" property="smsCode" />
		<result column="send_date" property="sendDate" />
		<result column="send_ip" property="sendIp" />
		<result column="flag" property="flag" />
	</resultMap>

	<select id="queryUser" resultMap="userMap" parameterType="User">
		SELECT *
		FROM common_user t
		where 1=1
		<if test="userCode !=null and userCode !='' ">
			and t.user_code = #{userCode}
		</if>
		<if test="userEmail!=null and userEmail!='' ">
			and t.user_email = #{userEmail}
		</if>
	</select>

	<select id="queryUserInfo" resultMap="userMap">
		SELECT 
		   t.user_id userId,
		  t.user_code userCode,
		  t.user_name userName,
		  t.user_sex userSex,
		  t.user_password  userPassword,
		  t.user_idcard userIdcard,
		  t.user_deptcode userDeptcode,
		  t.pwdvaild_time pwdvaildTime,
		  t.is_frozen isFrozen,
		  t.user_birthdate userBirthdate,
		  t.user_mobile userMobile,
		  t.user_email userEmail,
		  t.create_time createTime,
		  t.lastlogin_time lastloginTime,
		  t.lastlogin_ip lastLoginIp,
		  t.pwd_initial pwdinitial,
		  a.DIVISIONS_ID userDivisionsId 
		FROM  common_user t 
		LEFT JOIN divisions_user_mapping a 
		ON t.user_id = a.user_id
		where t.user_code = #{uCode} and t.user_password=#{uPwd} 
		and t.is_frozen ='NO'
	</select>

	<select id="queryUserList" resultType="User" parameterType="User">
		SELECT 
			t.user_id userId,
			t.user_code userCode,
			t.user_name userName,
			t.user_sex userSex,
			CASE t.user_sex
				WHEN 'MALE' THEN '男'
				WHEN 'FEMALE' THEN '女'
				WHEN 'UNKNOWN' THEN '未知'
			END userSexVal,
			t.user_idcard userIdcard,
			t.pwdvaild_time pwdvaildTime,
			t.is_frozen isFrozen,
			CASE t.is_frozen
				WHEN 'YES' THEN '是'
				WHEN 'NO' THEN '否'
			END isFrozenVal,
			CASE t.is_sms_verify
				WHEN 'YES' THEN '是'
				WHEN 'NO' THEN '否'
			END isSmsVerify,
			t.user_birthdate userBirthdate,
			t.user_mobile userMobile,
			t.user_email userEmail,
			t.create_time createTime,
			t.lastlogin_time lastloginTime,
			t.lastlogin_ip lastLoginIp
		FROM common_user t
		where 1=1
		<if test="user.userCode!=null and user.userCode!='' ">
			and t.user_code like concat('%',#{user.userCode},'%')
		</if>
		<if test="user.userName!=null and user.userName !='' ">
			and t.user_name like concat('%',#{user.userName},'%')
		</if>
		<if test="user.isFrozen !=null and user.isFrozen !='' ">
			and t.is_frozen = #{user.isFrozen}
		</if>
		<if test="user.createtimeStart!=null and user.createtimeStart!='' ">
			and t.create_time &gt; #{user.createtimeStart}
		</if>
		<if test="user.createtimeEnd!=null and user.createtimeEnd!='' ">
			and t.create_time &lt; #{user.createtimeEnd}
		</if>
		<if test="list.size() > 0">
			and t.disuuid in 
			<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		 ORDER BY t.is_frozen ASC, t.create_time DESC
	</select>
	
	<select id="queryUserList2" resultType="User" parameterType="User">
		SELECT 
			t.user_id userId,
			t.user_code userCode,
			t.user_name userName,
			t.user_sex userSex,
			CASE t.user_sex
				WHEN 'MALE' THEN '男'
				WHEN 'FEMALE' THEN '女'
				WHEN 'UNKNOWN' THEN '未知'
			END userSexVal,
			t.user_idcard userIdcard,
			t.pwdvaild_time pwdvaildTime,
			t.is_frozen isFrozen,
			CASE t.is_frozen
				WHEN 'YES' THEN '是'
				WHEN 'NO' THEN '否'
			END isFrozenVal,
			CASE t.is_sms_verify
				WHEN 'YES' THEN '是'
				WHEN 'NO' THEN '否'
			END isSmsVerify,
			t.user_birthdate userBirthdate,
			t.user_mobile userMobile,
			t.user_email userEmail,
			t.create_time createTime,
			t.lastlogin_time lastloginTime,
			t.lastlogin_ip lastLoginIp,
			t3.DIS_LEVEL as roleLevel,
			t3.ROLE_ID as roleId,
			t3.ROLE_NAME as roleName,  
			t4.dis_uuid as disUuid, 
			t4.comm_uuid as commUuid,
			t6.area_name as userDivisionsId
		FROM common_user t
		LEFT JOIN common_user_mapping t2 ON t2.USER_ID = t.USER_ID
		LEFT JOIN common_role t3 ON t3.ROLE_ID = t2.ROLE_ID
		LEFT JOIN common_usercomm_mapping t4 ON t4.user_id = t.user_id
		LEFT JOIN divisions_user_mapping t5 ON t5.user_id = t.user_id
		LEFT JOIN conf_area t6 ON t5.DIVISIONS_ID = t6.area_id
		
		<where>
			<if test="user.userCode!=null and user.userCode!='' ">
				and t.user_code like concat('%',#{user.userCode},'%')
			</if>
			<if test="user.userName!=null and user.userName !='' ">
				and t.user_name like concat('%',#{user.userName},'%')
			</if>
			<if test="user.isFrozen !=null and user.isFrozen !='' ">
				and t.is_frozen = #{user.isFrozen}
			</if>
			<if test="user.createtimeStart!=null and user.createtimeStart!='' ">
				and t.create_time &gt;= #{user.createtimeStart}
			</if>
			<if test="user.createtimeEnd!=null and user.createtimeEnd!='' ">
				and t.create_time &lt;= #{user.createtimeEnd}
			</if>
		</where>
		 ORDER BY t.is_frozen ASC, t.create_time DESC
	</select>

	<update id="updateUserPassword">
		UPDATE 
			common_user t 
		SET 
			t.user_password = #{1},
			t.pwdvaild_time = #{2},
			t.PWD_MODIFY_DATE = NOW()
		WHERE 
			t.user_id =#{0}
	</update>

	<update id="updateUserpwd">
		UPDATE 
			common_user t 
		SET 
			t.user_password = #{1},
			t.pwd_initial = #{2},
			t.pwdvaild_time =#{3},
			t.PWD_MODIFY_DATE = NOW() 
		WHERE 
			t.user_code=#{0}
	</update>

	<delete id="deleteUser">
		delete from common_user where user_id = #{0}
	</delete>
	
	<update id="updateUserby" parameterType="User">
		update common_user set is_frozen ='YES'
		where user_id =#{userId} 
	</update>

	<update id="updateUser" parameterType="User">
		update common_user
		<set>
			<if test="userCode != null and userCode !=''">user_code=#{userCode},</if>

			<if test="userPassword !=null and userPassword !=''">user_password = #{userPassword},</if>

			<if test="userName!=null and userName!=''">user_name = #{userName},</if>

			<if test="userSex !=null and userSex!=''">user_sex=#{userSex},</if>

			<if test="userIdcard !=null and userIdcard!=''">user_idcard=#{userIdcard},</if>

			<if test="userDeptcode!=null and userDeptcode!=''">user_deptcode=#{userDeptcode},</if>

			<if test="pwdvaildTime !=null and pwdvaildTime !=''">
				pwdvaild_time=str_to_date(#{pwdvaildTime},'%Y-%m-%d %H:%i:%s'),
			</if>

			<if test="isFrozen !=null and isFrozen !=''">is_frozen=#{isFrozen},</if>
			
			<if test="isSmsVerify !=null and isSmsVerify !=''">is_sms_verify=#{isSmsVerify},</if>

			<if test="userBirthdate !=null and userBirthdate !=''">
				user_birthdate=str_to_date(#{userBirthdate},'%Y-%m-%d %H:%i:%s'),
			</if>

			<if test="userMobile !=null and userMobile !=''">user_mobile=#{userMobile},</if>

			<if test="userEmail !=null and userEmail !=''">user_email=#{userEmail},</if>

			<if test="lastloginTime =='Yes'">
				lastlogin_time= NOW(),
			</if>
			<if test="lastloginIp !=null and lastloginIp !=''">lastlogin_ip=#{lastloginIp}</if>
		</set>
		where user_id =#{userId}
	</update>

	<insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
		insert into common_user (
		user_code
		<if test="userName!=null and userName!='' ">
			,user_name
		</if>
		<if test="userSex!=null and userSex!='' ">
			,user_sex
		</if>
		<if test="userPassword!=null and userPassword!='' ">
			,user_password
		</if>
		<if test="userIdcard!=null and userIdcard!='' ">
			,user_idcard
		</if>
		<if test="userDeptcode!=null and userDeptcode!='' ">
			,user_deptcode
		</if>
		<if test="pwdvaildTime!=null and pwdvaildTime!='' ">
			,pwdvaild_time
		</if>
		<if test="isFrozen!=null and isFrozen!='' ">
			,is_frozen
		</if>
		<if test="isSmsVerify !=null and isSmsVerify !='' ">
			,is_sms_verify
		</if>
		<if test="userBirthdate!=null and userBirthdate!='' ">
			,user_birthdate
		</if>
		<if test="userMobile!=null and userMobile!='' ">
			,user_mobile
		</if>
		<if test="userEmail!=null and userEmail!='' ">
			,user_email
		</if>
			,create_time
		<if test="lastloginTime!=null and lastloginTime!='' ">
			,lastlogin_time
		</if>
		<if test="lastloginIp!=null and lastloginIp!='' ">
			,lastlogin_ip
		</if>
		)values(
			#{userCode}
		<if test="userName!=null and userName!='' ">
			,#{userName}
		</if>
		<if test="userSex!=null and userSex!='' ">
			,#{userSex}
		</if>
		<if test="userPassword!=null and userPassword!='' ">
			,#{userPassword}
		</if>
		<if test="userIdcard!=null and userIdcard!='' ">
			,#{userIdcard}
		</if>
		<if test="userDeptcode!=null and userDeptcode!='' ">
			,#{userDeptcode}
		</if>
		<if test="pwdvaildTime!=null and pwdvaildTime!='' ">
			,str_to_date(#{pwdvaildTime},'%Y-%m-%d %H:%i:%s')
		</if>
		<if test="isFrozen!=null and isFrozen!='' ">
			,#{isFrozen}
		</if>
		<if test="isSmsVerify !=null and isSmsVerify !='' ">
			,#{isSmsVerify}
		</if>
		<if test="userBirthdate!=null and userBirthdate!='' ">
			,str_to_date(#{userBirthdate},'%Y-%m-%d %H:%i:%s')
		</if>
		<if test="userMobile!=null and userMobile!='' ">
			,#{userMobile}
		</if>
		<if test="userEmail!=null and userEmail!='' ">
			,#{userEmail}
		</if>
			,now()
		<if test="lastloginTime!=null and lastloginTime!='' ">
			,str_to_date(#{lastloginTime},'%Y-%m-%d %H:%i:%s')
		</if>
		<if test="lastloginIp!=null and lastloginIp!='' ">
			,#{lastloginIp}
		</if>
		)
	</insert>

	<select id="queryUserroleslistById" resultType="UserRoles">
		select
		t.id,t.user_id as userId,t.role_id as roleId FROM common_user_mapping
		t WHERE t.user_id = #{0}
	</select>

	<!-- 根据 role_id 查询对应的实体 -->
	<select id="queryUserroleslistByroleId" parameterType="list"
		resultType="UserRoles">
		select t.id,t.user_id as userId,t.role_id as roleId FROM
		common_user_mapping t where role_id in
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>

	<delete id="delUserRolesInfo">
		delete from common_user_mapping
		WHERE user_id = #{userId}
	</delete>

	<insert id="addUserRoleInfo">
		insert into common_user_mapping
		(user_id,role_id)values(#{0},#{1})
	</insert>

	<select id="queryUserMenuids" resultType="Menu">
		(SELECT DISTINCT
		t.menu_fatherid as menuId FROM common_menu t
		WHERE t.menu_id IN (
		SELECT DISTINCT b.menu_id FROM common_role_mapping b
		INNER JOIN
		common_user_mapping a
		ON b.role_id = a.role_id
		AND a.user_id = #{0}))
		UNION ALL
		(SELECT DISTINCT b.menu_id as menuId FROM
		common_role_mapping
		b
		INNER JOIN common_user_mapping a
		ON b.role_id =
		a.role_id
		AND a.user_id
		= #{0})
	</select>
	
	<delete id="deleteSmsCode">
		delete from conf_sms_code where expiring_time &lt; NOW()
	</delete>
	
	<insert id="saveSmsCode" parameterType="AccountSmsCode">
		insert into conf_sms_code (
			user_name,
			sms_code,
			create_time,
			expiring_time
		)values (
			#{userName},
			#{smsCode},
			NOW(),
			DATE_ADD(NOW(), INTERVAL 30 MINUTE)
		)
	</insert>
	
	<select id="countSmsBy" parameterType="AccountSmsCode" resultType="Integer">
		SELECT COUNT(1) as id FROM sc_pms_account_smscode t
		WHERE t.phone_number =#{phoneNumber}
		<if test="flag ==1 ">
			AND t.send_date LIKE CONCAT(DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i'), '%')
		</if>
		<if test="flag ==2 ">
			AND t.send_date LIKE CONCAT(DATE_FORMAT(NOW(), '%Y-%m-%d'), '%')
			AND t.send_ip = #{sendIp}
		</if>
	</select>
	
	<select id="querySmsCode" parameterType="String" resultType="String">
		SELECT 
			t.sms_code smsCode
		FROM 
			conf_sms_code t
		WHERE 
			t.user_name = #{0} AND t.expiring_time &gt; NOW()
		ORDER BY sms_id DESC
		LIMIT 0,1
	</select>
	
	<update id="updateRole" parameterType="String">
		update common_user_mapping t set t.ROLE_ID = #{1} where t.USER_ID=#{0}
	</update>
	
	<update id="updateUserStatus" parameterType="String">
		UPDATE common_user t SET t.IS_FROZEN = #{frozen}
		WHERE EXISTS (
			SELECT t2.user_id FROM common_usercomm_mapping t2
			LEFT JOIN common_user_mapping t3 ON t3.USER_ID = t2.user_id
			LEFT JOIN common_role t4 ON t4.ROLE_ID = t3.ROLE_ID
			WHERE t2.user_id =t.USER_ID
			AND t2.comm_uuid = #{commUuid}
			AND t4.ROLE_ID=54
		)
	</update>
</mapper>
